{"version":3,"sources":["redux/action.js","AppComponents/Navbar.js","AppComponents/SignUp.js","AppComponents/Login.js","AppComponents/Landing.js","AppComponents/Requests.js","AppComponents/StudentChoicesMenu.js","AppComponents/ProfChoicesMenu.js","redux/reducer.js","AppComponents/CreateTeam.js","AppComponents/ViewTeams.js","AppComponents/NewCourse.js","AppComponents/JoinRequest.js","AppComponents/AcceptStudent.js","redux/store.js","App.js","serviceWorker.js","index.js","background.png"],"names":["Types","ADD_USER","user","type","payload","Navbar","logOutBtn","to","pathname","className","id","style","hover","title","onClick","window","localStorage","clear","props","addUser","userNotSignedInLinks","userSignedInLinks","JSON","parse","getItem","href","Component","connect","state","dispatch","ACTIONS","SIGN_UP","gql","SignUp","onChange","e","setState","target","name","value","setType","usertype","console","log","iduser","username","userpassword","errors","email","mutation","createUser","data","noValidate","onSubmit","preventDefault","newUser","parseInt","variables","then","setItem","stringify","usert","history","push","catch","err","placeholder","maxLength","classnames","active","autoComplete","compose","graphql","base64","require","utf8","LOGIN_QUERY","Login","text","concat","idNumber","bytes","encode","userData","client","query","password","this","withApollo","Background","Landing","position","backgroundImage","backgroundSize","backgroundPosition","height","marginBottom","backgroundColor","top","left","width","color","marginTop","SEND_EMAIL","DELETE_REQ","ADD_MEMBER","Requests","request","index","scope","idstudent","class","mutate","idteam","idrequest","requests","splice","updateState","map","renderRequest","StudentChoicesMenu","student","justifyContent","flexDirection","alignItems","display","length","newRequests","ProfChoicesMenu","defaultState","appReducer","action","newState","_","cloneDeep","CREATE_TEAM","CreateTeam","idliason","membersCount","teamname","idcourse","idprof","createdAt","createTeam","newTeam","VIEWTEAMS_QUERY","ViewTeams","team","float","maxWidth","node","loading","error","Object","values","allTeams","edges","renderTeam","NEW_COURSE","newCourse","deadline","minstudents","maxstudents","createCourse","NEW_REQUEST","JoinRequest","selectedTeam","studentId","REQUEST","decode","replace","currentteam","onTeamSelect","initialState","AcceptStudent","send","ApolloClient","uri","reduxStore","REDUX_INITIAL_DATA","createStore","reducer","applyMiddleware","logger","composeWithDevTools","App","store","exact","path","component","NewCourse","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.437eda17.chunk.js","sourcesContent":["// types of action\nconst Types = {\n  ADD_USER: \"ADD_USER\"\n  // DELETE_ITEM: \"DELETE_ITEM\"\n};\n// actions\nconst addUser = user => ({\n  type: Types.ADD_USER,\n  payload: user\n});\n\n// const deleteItem = id => ({\n//   type: Types.DELETE_ITEM,\n//   payload: id\n// });\n\nexport default {\n  addUser,\n  // deleteItem,\n  Types\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ACTIONS from \"../redux/action\";\nimport { Link } from \"react-router-dom\";\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addUser: user => dispatch(ACTIONS.addUser(user))\n});\n\nclass Navbar extends Component {\n  render() {\n    const logOutBtn = (\n      <Link to={{ pathname: \"/\" }}>\n        <li className=\"nav-item\" id=\"account_circle\">\n          <i\n            style={{ hover: \"pointer\" }}\n            className=\"nav-link material-icons\"\n            title=\"Log out\"\n            onClick={() => {\n              window.localStorage.clear();\n              this.props.addUser({});\n            }}\n          >\n            highlight_off\n          </i>\n        </li>\n      </Link>\n    );\n\n    const userNotSignedInLinks = (\n      <ul className=\"form-inline navbar-nav my-2 my-lg-0\">\n        <li className=\"nav-item\">\n          <Link to=\"/signup\" className=\"nav-link\">\n            Sign Up\n          </Link>\n        </li>\n\n        <li className=\"nav-item\">\n          <Link to=\"/login\" className=\"nav-link\">\n            Log In\n          </Link>\n        </li>\n      </ul>\n    );\n\n    const userSignedInLinks = (\n      <ul className=\"form-inline navbar-nav my-2 my-lg-0\">{logOutBtn}</ul>\n    );\n\n    var user = JSON.parse(window.localStorage.getItem(\"user\"));\n\n    return (\n      <div className=\"App\">\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n          <Link to=\"/\" className=\"navbar-brand\" href=\"#\">\n            TeamUpApp\n          </Link>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n            <ul className=\"navbar-nav mr-auto\"></ul>\n            {!user ? userNotSignedInLinks : userSignedInLinks}\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","import React, { Component } from \"react\";\nimport { Mutation, graphql } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { compose } from \"recompose\";\nimport classnames from \"classnames\";\nimport ACTIONS from \"../redux/action\";\nimport { connect } from \"react-redux\";\n\nconst mapDispatchToProps = dispatch => ({\n  addUser: user => dispatch(ACTIONS.addUser(user))\n});\n\nconst SIGN_UP = gql`\n  mutation createUser(\n    $iduser: Int!\n    $username: String!\n    $userpassword: String!\n    $usertype: String!\n    $email: String!\n  ) {\n    createUser(\n      input: {\n        iduser: $iduser\n        username: $username\n        userpassword: $userpassword\n        usert: $usertype\n        email: $email\n      }\n    ) {\n      user {\n        id\n        iduser\n        username\n        userpassword\n        usert\n        email\n        requests {\n          id\n          idteam\n          idstudent\n        }\n      }\n    }\n  }\n`;\n\nclass SignUp extends Component {\n  constructor() {\n    super();\n    this.state = {\n      iduser: 0,\n      username: \"\",\n      userpassword: \"\",\n      usertype: \"\",\n      errors: \"\",\n\t  email: \"\"\n    };\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  setType = type => {\n    this.setState({\n      usertype: type\n    });\n    console.log(type);\n  };\n\n  render() {\n    return (\n      <Mutation mutation={SIGN_UP}>\n        {(createUser, { data }) => (\n          <div className=\"register mt-5\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-8 m-auto\">\n                  <h1 className=\"display-4 text-center\">Sign Up</h1>\n                  <p className=\"lead text-center\">\n                    Create your Student/Teacher account\n                  </p>\n                  <form\n                    noValidate\n                    onSubmit={e => {\n                      e.preventDefault();\n                      const newUser = {\n                        iduser: parseInt(this.state.iduser),\n                        username: this.state.username,\n                        userpassword: this.state.userpassword,\n                        usertype: this.state.usertype,\n\t\t\t\t\t\temail: this.state.email\n                      };\n                      console.log(\"newUser\", newUser);\n                      createUser({ variables: newUser })\n                        .then(data => {\n                          window.localStorage.setItem(\n                            \"user\",\n                            JSON.stringify(newUser)\n                          );\n                          this.props.addUser(data.data.createUser.user);\n                          console.log(data);\n                          if (data.data.createUser.user.usert === \"S\") {\n                            this.props.history.push(\"/studentChoicesMenu\");\n                          } else {\n                            this.props.history.push(\"/profChoicesMenu\");\n                          }\n                        })\n                        .catch(err => {\n                          console.log(\"failure\");\n                          console.log(err);\n                          this.setState({\n                            errors:\n                              \"Something went wrong went trying to create account. Please Change the entered info and try again\"\n                          });\n                          console.log(this.state);\n                        });\n                    }}\n                  >\n\t\t\t\t  <div className=\"form-group\">\n                      <input\n                        name=\"email\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"Email (gmail only):\"\n                        value={this.state.email}\n                        onChange={this.onChange}\n                        type=\"String\"\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label>User ID:</label>\n                      <input\n                        name=\"iduser\"\n                        maxLength=\"9\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"User Id:\"\n                        value={this.state.iduser}\n                        onChange={this.onChange}\n                        type=\"Number\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <input\n                        type=\"String\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"User name\"\n                        name=\"username\"\n                        value={this.state.username}\n                        onChange={this.onChange}\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <input\n                        type=\"String\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"User Password\"\n                        name=\"userpassword\"\n                        value={this.state.userpassword}\n                        onChange={this.onChange}\n                      />\n                    </div>\n\n                    <div className=\"btn-group btn-group-toggle\">\n                      <label\n                        className={classnames(\"btn btn-primary\", {\n                          active: this.state.usertype == \"S\"\n                        })}\n                      >\n                        <input\n                          type=\"checkbox\"\n                          autoComplete=\"off\"\n                          onClick={() => this.setType(\"S\")}\n                        />{\" \"}\n                        Student\n                      </label>\n                      <label\n                        className={classnames(\"btn btn-primary\", {\n                          active: this.state.usertype == \"T\"\n                        })}\n                      >\n                        <input\n                          type=\"checkbox\"\n                          autoComplete=\"off\"\n                          onClick={() => this.setType(\"T\")}\n                        />{\" \"}\n                        Teacher\n                      </label>\n                    </div>\n                    <div className=\"text-primary\">\n                      <p>{this.state.errors}</p>\n                    </div>\n                    <input\n                      type=\"submit\"\n                      className=\"btn btn-block mt-4 btn-secondary\"\n                    />\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default compose(\n  connect(null, mapDispatchToProps),\n  graphql(SIGN_UP)\n)(SignUp);\n","import React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query, graphql, withApollo } from \"react-apollo\";\nimport ACTIONS from \"../redux/action\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"recompose\";\nimport classnames from \"classnames\";\n\nvar base64 = require(\"base-64\");\nvar utf8 = require(\"utf8\");\n\n// const mapStateToProps = state => ({\n//   items: state.items\n// });\n\nconst mapDispatchToProps = dispatch => ({\n  addUser: user => dispatch(ACTIONS.addUser(user))\n});\n\nconst LOGIN_QUERY = gql`\n  query user($id: ID!) {\n    user(id: $id) {\n      iduser\n      username\n      userpassword\n      usert\n      id\n      requests {\n        id\n        idteam\n        idstudent\n      }\n    }\n  }\n`;\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      idNumber: \"\",\n      password: \"\",\n      errors: { idNumber: \"\", password: \"\" }\n    };\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    var text = \"UserSchema:\";\n    text = text.concat(this.state.idNumber);\n    var bytes = utf8.encode(text);\n    var encoded = base64.encode(bytes);\n\n    const userData = {\n      id: encoded\n    };\n    this.props.client\n      .query({\n        query: LOGIN_QUERY,\n        variables: userData\n      })\n      .then(data => {\n        console.log(data);\n        const user = data.data.user;\n\n        if (user.userpassword == this.state.password) {\n          window.localStorage.setItem(\"user\", JSON.stringify(data.data));\n          this.props.addUser(user);\n\n          if (user.usert === \"S\") {\n            this.props.history.push(\"/studentChoicesMenu\");\n          } else {\n            this.props.history.push(\"/teacherChoicesMenu\");\n          }\n        } else {\n          this.setState({\n            errors: {\n              password: \"The password you entered is incorrect\"\n            }\n          });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          errors: {\n            idNumber: \"The idNumber you entered is incorrect\"\n          }\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"login mt-5\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <p className=\"lead text-center\">Sign in to your TeamUp Account</p>\n              <form noValidate onSubmit={this.onSubmit}>\n                <div className=\"form-group has-danger\">\n                  <input\n                    type=\"string\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": this.state.errors[\"idNumber\"]\n                    })}\n                    placeholder=\"Id Number\"\n                    name=\"idNumber\"\n                    value={this.state.idNumber}\n                    onChange={this.onChange}\n                  />\n\n                  <div className=\"invalid-feedback\">\n                    {this.state.errors.idNumber}\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": this.state.errors[\"password\"]\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  <div className=\"invalid-feedback\">\n                    {this.state.errors.password}\n                  </div>\n                </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-secondary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default compose(connect(null, mapDispatchToProps), withApollo)(Login);\n","import React, { Component } from \"react\";\nvar Background = require(\"../background.png\");\n\nexport default class Landing extends Component {\n  render() {\n    return (\n      <div\n        style={{\n          position: \"relative\",\n          backgroundImage: `url(${Background})`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n          height: \"100vh\",\n          marginBottom: \"-50px\"\n        }}\n      >\n        <div\n          style={{\n            backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            width: \"100%\",\n            height: \" 100%\"\n          }}\n        >\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1\n                  className=\"display-3 mb-4\"\n                  style={{ color: \"white\", marginTop: \"15px\" }}\n                >\n                  Team Up App\n                </h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { withApollo } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst SEND_EMAIL = gql`\n  mutation createEmail($email: String!, $idteam: Int!, $idcourse: String!) {\n    createEmail(\n      input: { email: $email, idteam: $idteam, idcourse: $idcourse }\n    ) {\n      course {\n        id\n        email\n        idteam\n        idcourse\n      }\n    }\n  }\n`;\n\nconst DELETE_REQ = gql`\n  mutation deleteRequest($idrequest: Int!) {\n    deleteRequest(input: { idrequest: $idrequest }) {\n      ok\n    }\n  }\n`;\n\nconst ADD_MEMBER = gql`\n  mutation createMember($idteam: Int!, $iduser: Int!) {\n    createMember(input: { idteam: $idteam, iduser: $iduser }) {\n      member {\n        idteam\n        iduser\n      }\n    }\n  }\n`;\n\nclass Requests extends Component {\n  renderRequest(request, index) {\n    console.log(request);\n    return (\n      <tr>\n        <th scope=\"row\">{request.idstudent}</th>\n        <td>\n          <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            onClick={() => {\n              this.props.client.mutate({\n                mutation: ADD_MEMBER,\n                variables: { idteam: request.idteam, iduser: request.idstudent }\n              });\n              this.props.client.mutate({\n                mutation: DELETE_REQ,\n                variables: { idrequest: request.id }\n              });\n              var user = JSON.parse(window.localStorage.getItem(\"user\")).user;\n              user.requests.splice(index, 1);\n              user = { user: user };\n              window.localStorage.setItem(\"user\", JSON.stringify(user));\n              this.props.updateState(user.user.requests);\n              this.props.client.mutate({\n                mutation: SEND_EMAIL,\n                variables: {}\n              });\n            }}\n          >\n            Accept\n          </button>\n        </td>\n        <td>\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            onClick={() => {\n              this.props.client.mutate({\n                mutation: DELETE_REQ,\n                variables: { idrequest: request.id }\n              });\n              var user = JSON.parse(window.localStorage.getItem(\"user\")).user;\n              user.requests.splice(index, 1);\n              user = { user: user };\n              window.localStorage.setItem(\"user\", JSON.stringify(user));\n              this.props.updateState(user.user.requests);\n            }}\n          >\n            Reject\n          </button>\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    return (\n      <div style={{ marginTop: \"10px\" }}>\n        <h1> Team Join Requests</h1>\n        <table className=\"table table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Student Number</th>\n              <th scope=\"col\">Accept Join Request</th>\n              <th scope=\"col\">Reject Join Request</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.requests.map((request, index) =>\n              this.renderRequest(request, index)\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default withApollo(Requests);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Requests from \"./Requests\";\nimport { withApollo } from \"react-apollo\";\nimport { request } from \"http\";\n\nclass StudentChoicesMenu extends Component {\n  constructor() {\n    super();\n    const student = JSON.parse(window.localStorage.getItem(\"user\")).user;\n    console.log(\"student is here\", student);\n    this.state = {\n      requests: student ? student.requests : []\n    };\n  }\n  render() {\n    return (\n      <div\n        className=\"w-50 mx-auto\"\n        style={{\n          justifyContent: \"space-between\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          display: \"flex\"\n        }}\n      >\n        {this.state.requests.length > 0 ? (\n          <Requests\n            requests={this.state.requests}\n            updateState={newRequests => {\n              this.setState({ requests: newRequests });\n            }}\n          />\n        ) : (\n          \"\"\n        )}\n        <Link\n          to=\"/createteam\"\n          style={{ width: \"100%\", height: \"100%\" }}\n          type=\"button\"\n          className=\"btn btn-secondary btn-lg btn-block\"\n        >\n          Create Team\n        </Link>\n        <Link\n          to=\"/joinrequest\"\n          style={{ width: \"100%\", height: \"100%\" }}\n          type=\"button\"\n          className=\"btn btn-secondary btn-lg btn-block\"\n        >\n          Join Team\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default withApollo(StudentChoicesMenu);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass ProfChoicesMenu extends Component {\n  render() {\n    return (\n      <div\n        className=\"w-50 mx-auto\"\n        style={{\n          justifyContent: \"space-between\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          display: \"flex\"\n        }}\n      >\n        <Link\n          to=\"/SetupCourse\"\n          style={{ width: \"100%\", height: \"100%\" }}\n          type=\"button\"\n          className=\"btn btn-secondary btn-lg btn-block\"\n        >\n          Set Up Course Parameters\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default ProfChoicesMenu;\n","import ACTIONS from \"./action\";\nimport _ from \"lodash\";\n\nconst defaultState = {\n  user: {}\n};\n\nconst appReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ACTIONS.Types.ADD_USER: {\n      console.log(action);\n\n      let user = action.payload;\n      let newState = _.cloneDeep(state);\n      newState.user = user;\n      return newState;\n    }\n\n    // case ACTIONS.Types.DELETE_ITEM: {\n    //   let newState = _.cloneDeep(state);\n    //   let index = _.findIndex(newState.items, { id: action.payload });\n    //   newState.items.splice(index, 1);\n    //   return newState;\n    // }\n\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n","import React, { Component } from \"react\";\nimport { Mutation, graphql } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { compose } from \"recompose\";\nimport classnames from \"classnames\";\nimport ACTIONS from \"../redux/action\";\nimport { connect } from \"react-redux\";\n\n// const mapDispatchToProps = dispatch => ({\n//   addUser: user => dispatch(ACTIONS.addUser(user))\n// });\n\nconst CREATE_TEAM = gql`\n  mutation createTeam(\n    $membersCount: Int!\n    $teamname: String!\n    $idliason: Int!\n    $idteam: Int!\n    $idcourse: String!\n    $idprof: Int!\n    $createdAt: Date!\n  ) {\n    createTeam(\n      input: {\n        membersCount: $membersCount\n        idliason: $idliason\n        teamname: $teamname\n        idteam: $idteam\n        idcourse: $idcourse\n        idprof: $idprof\n        createdAt: $createdAt\n      }\n    ) {\n      team {\n        idliason\n        membersCount\n        teamname\n        idteam\n        idcourse\n        idprof\n        createdAt\n      }\n    }\n  }\n`;\n\nclass CreateTeam extends Component {\n  constructor() {\n    super();\n    this.state = {\n      idliason: \"\",\n      membersCount: \"\",\n      teamname: \"\",\n      idteam: \"\",\n      idcourse: \"\",\n      idprof: \"\",\n      createdAt: \"\",\n      errors: \"\"\n    };\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    return (\n      <Mutation mutation={CREATE_TEAM}>\n        {(createTeam, { data }) => (\n          <div className=\"register mt-5\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-8 m-auto\">\n                  <h1 className=\"display-4 text-center\">Create Team</h1>\n                  <p className=\"lead text-center\">Create your Team</p>\n                  <form\n                    noValidate\n                    onSubmit={e => {\n                      e.preventDefault();\n                      const newTeam = {\n                        idcourse: this.state.idcourse,\n                        idliason: parseInt(this.state.idliason),\n                        membersCount: parseInt(this.state.membersCount),\n                        teamname: this.state.teamname,\n                        idteam: parseInt(this.state.idteam),\n                        idprof: parseInt(this.state.idprof),\n                        createdAt: this.state.createdAt\n                      };\n                      console.log(\"newTeam\", newTeam);\n                      createTeam({ variables: newTeam })\n                        .then(data => {\n                          console.log(data);\n                          this.props.history.push(\"/studentChoicesMenu\");\n\n                          //   this.props.addTeam(data.data.createTeam.team);\n                          //   console.log(data);\n                          //   if (data.data.createUser.user.usertype === \"S\") {\n                          //     this.props.history.push(\"/studentChoicesMenu\");\n                          //   } else {\n                          //     this.props.history.push(\"/teacherChoicesMenu\");\n                          //   }\n                        })\n                        .catch(err => {\n                          console.log(\"failure\");\n                          console.log(err);\n                          this.setState({\n                            errors:\n                              \"Something went wrong went trying to create account. Please Change the entered info and try again\"\n                          });\n                          console.log(this.state);\n                        });\n                    }}\n                  >\n                    <div className=\"form-group\">\n                      <input\n                        name=\"idliason\"\n                        maxLength=\"9\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"Liason Id:\"\n                        value={this.state.idliason}\n                        onChange={this.onChange}\n                        type=\"Number\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <input\n                        name=\"idteam\"\n                        maxLength=\"9\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"Team Id:\"\n                        value={this.state.idteam}\n                        onChange={this.onChange}\n                        type=\"Number\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <input\n                        name=\"idprof\"\n                        maxLength=\"9\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"Professor ID:\"\n                        value={this.state.idprof}\n                        onChange={this.onChange}\n                        type=\"Number\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <input\n                        name=\"idcourse\"\n                        maxLength=\"9\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"Course ID:\"\n                        value={this.state.idcourse}\n                        onChange={this.onChange}\n                        type=\"String\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <input\n                        name=\"membersCount\"\n                        maxLength=\"9\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"M\"\n                        value={this.state.membersCount}\n                        onChange={this.onChange}\n                        type=\"Number\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <input\n                        type=\"String\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"Team name\"\n                        name=\"teamname\"\n                        value={this.state.teamname}\n                        onChange={this.onChange}\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <input\n                        type=\"String\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"yyyy-mm-dd\"\n                        name=\"createdAt\"\n                        value={this.state.createdAt}\n                        onChange={this.onChange}\n                      />\n                    </div>\n\n                    {/* <div className=\"btn-group btn-group-toggle\">\n                      <label\n                        className={classnames(\"btn btn-primary\", {\n                          active: this.state.usertype == \"S\"\n                        })}\n                      >\n                        <input\n                          type=\"checkbox\"\n                          autoComplete=\"off\"\n                          onClick={() => this.setType(\"S\")}\n                        />{\" \"}\n                        Student\n                      </label>\n                      <label\n                        className={classnames(\"btn btn-primary\", {\n                          active: this.state.usertype == \"T\"\n                        })}\n                      >\n                        <input\n                          type=\"checkbox\"\n                          autoComplete=\"off\"\n                          onClick={() => this.setType(\"T\")}\n                        />{\" \"}\n                        Teacher\n                      </label>\n                    </div> */}\n                    <div className=\"text-primary\">\n                      <p>{this.state.errors}</p>\n                    </div>\n                    <input\n                      type=\"submit\"\n                      className=\"btn btn-block mt-4 btn-secondary\"\n                    />\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default graphql(CREATE_TEAM)(CreateTeam);\n","import React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query, graphql, withApollo } from \"react-apollo\";\nimport ACTIONS from \"../redux/action\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"recompose\";\nimport classnames from \"classnames\";\n\nconst VIEWTEAMS_QUERY = gql`\n  query{\n  allTeams {\n    edges {\n      node {\n        teamname\n        idteam\n        idcourse\n        membersCount\n        createdAt\n        idliason\n        idprof\n  }\n}\n}\n}\n`;\n\nclass ViewTeams extends Component {\n  constructor(props) {\n    super(props);\n    \n  }\n\n  renderTeam(team) {\n    if (team != null)\n      return (\n        <div style={{float:'left'}}>\n          <div className=\"card text-white bg-primary mb-3\" style={{ maxWidth: \"20rem\"}}>\n            <div className=\"card-header\" >Team ID: {team.node.idteam}</div>\n            <div className=\"card-body\">\n              <h3 className=\"card-title\">{team.node.teamname}</h3>\n              <h6 className=\"card-title\">{team.node.idcourse}</h6>\n              <p className=\"card-text\">Maximum number of students is: {team.node.membersCount}</p>\n\n            </div>\n          </div>\n        </div>\n      );\n    else return <div></div>;\n  }\n\n  render() {\n    \n\n    return (\n      <div className=\"container\">\n        <Query query={VIEWTEAMS_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading) {\n              return <h4> Loading </h4>;\n            }\n            if (error) {\n              console.log(error);\n            }\n            console.log(\"DATA\", data);\n\n            \n\n            return (\n              <div style={{marginTop: \"30px\"}}>\n                {Object.values(data.allTeams.edges).map(\n                  (team, index) => this.renderTeam(team)\n                  \n                )}\n              </div>\n            );\n          }}\n        </Query>\n      </div>\n    );\n  }\n}\nexport default ViewTeams;\n\n\n","import React, { Component } from \"react\";\nimport { Mutation, graphql } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst NEW_COURSE = gql`\n  mutation createCourse(\n    $idcourse: String!\n    $idprof: Int!\n    $deadline: Date!\n    $minstudents: Int!\n    $maxstudents: Int!\n  ) {\n    createCourse(\n      input: {\n        idcourse: $idcourse\n        idprof: $idprof\n        deadline: $deadline\n        minstudents: $minstudents\n        maxstudents: $maxstudents\n      }\n    ) {\n      course {\n        id\n        idcourse\n      }\n    }\n  }\n`;\n\nclass newCourse extends Component {\n  constructor() {\n    super();\n    this.state = {\n      idcourse: \"\",\n      idprof: 0,\n      deadline: \"\",\n      minstudents: 0,\n      maxstudents: 0\n    };\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    return (\n      <Mutation mutation={NEW_COURSE}>\n        {(createCourse, { data }) => (\n          <div className=\"setup\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-8 m-auto\">\n                  <h1 className=\"display-4 text-center\">New Course</h1>\n                  <p className=\"lead text-center\">\n                    Setup Team Parameters for a Course\n                  </p>\n                  <form\n                    noValidate\n                    onSubmit={e => {\n                      e.preventDefault();\n                      const newCourse = {\n                        idcourse: this.state.idcourse,\n                        idprof: parseInt(this.state.idprof),\n                        deadline: this.state.deadline,\n                        minstudents: parseInt(this.state.minstudents),\n                        maxstudents: parseInt(this.state.maxstudents)\n                      };\n                      console.log(\"newCourse\", newCourse);\n                      createCourse({ variables: newCourse });\n                      this.props.history.push(\"/profChoicesMenu\");\n                    }}\n                  >\n                    <div className=\"form-group\">\n                      <input\n                        name=\"idcourse\"\n                        maxLength=\"7\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"Course ID:\"\n                        //value={this.state.idcourse}\n                        onChange={this.onChange}\n                        type=\"String\"\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <input\n                        type=\"Number\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"(WILL REMOVE THIS) Prof ID:\"\n                        name=\"idprof\"\n                        //value={this.state.idprof}\n                        onChange={this.onChange}\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label>Team Creation Deadline:</label>\n                      <input\n                        type=\"Date\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"Team Creation Deadline\"\n                        name=\"deadline\"\n                        //value={this.state.deadline}\n                        onChange={this.onChange}\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <input\n                        type=\"Number\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"Minimum Students:\"\n                        name=\"minstudents\"\n                        //value={this.state.minstudents}\n                        onChange={this.onChange}\n                      />\n                    </div>\n\n                    <div className=\"form-group\">\n                      <input\n                        type=\"Number\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"Maximum Students:\"\n                        name=\"maxstudents\"\n                        //                        value={this.state.maxstudents}\n                        onChange={this.onChange}\n                      />\n                    </div>\n                    <input\n                      type=\"submit\"\n                      className=\"btn btn-info btn-block mt-4\"\n                    />\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default graphql(NEW_COURSE)(newCourse);\n","import React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query, Mutation, graphql, withApollo } from \"react-apollo\";\nimport ACTIONS from \"../redux/action\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"recompose\";\nimport classnames from \"classnames\";\nimport NewCourse from \"./NewCourse\";\n\nvar base64 = require(\"base-64\");\nvar utf8 = require(\"utf8\");\n\nconst VIEWTEAMS_QUERY = gql`\n  query {\n    allTeams {\n      edges {\n        node {\n          teamname\n          id\n          idcourse\n          membersCount\n          createdAt\n          idliason\n          idprof\n        }\n      }\n    }\n  }\n`;\n\nconst NEW_REQUEST = gql`\n  mutation createRequest($idteam: Int!, $idliason: Int!, $idstudent: Int!) {\n    createRequest(\n      input: { idteam: $idteam, idliason: $idliason, idstudent: $idstudent }\n    ) {\n      request {\n        idteam\n      }\n    }\n  }\n`;\n\nclass JoinRequest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTeam: null\n    };\n  }\n\n  onTeamSelect(team) {\n    //   console.log(STUDENT);\n    var studentId = JSON.parse(window.localStorage.getItem(\"user\")).user.id;\n    const REQUEST = {\n      idteam: utf8.decode(base64.decode(team.id)).replace(\"TeamSchema:\", \"\"),\n      idliason: team.idliason,\n      idstudent: utf8\n        .decode(base64.decode(studentId))\n        .replace(\"UserSchema:\", \"\")\n    };\n    console.log(REQUEST);\n    this.props.client.mutate({\n      mutation: NEW_REQUEST,\n      variables: REQUEST\n    });\n  }\n\n  renderTeam(team) {\n    const currentteam = team.node;\n    if (team != null)\n      return (\n        <div className=\"card text-white bg-success mb-3\">\n          <div className=\"card-header\">\n            Team ID:{\" \"}\n            {utf8\n              .decode(base64.decode(currentteam.id))\n              .replace(\"TeamSchema:\", \"\")}\n          </div>\n          <div className=\"card-body\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-secondary my-2 my-sm-0\"\n              style={{ float: \"right\" }}\n              value={currentteam}\n              onClick={() => this.onTeamSelect(currentteam)}\n            >\n              Request to join team\n            </button>\n            <h3 className=\"card-title\">{currentteam.teamname}</h3>\n            <h6 className=\"card-title\">{currentteam.idcourse}</h6>\n            <p className=\"card-text\">\n              Maximum number of students is: {currentteam.membersCount}\n            </p>\n          </div>\n        </div>\n      );\n    else return <div></div>;\n  }\n\n  render() {\n    console.log(this.props);\n    // console.log(STUDENT);\n    // console.log(IDSTUDENT);\n    console.log(\"render started \");\n\n    return (\n      <div className=\"container\">\n        <Query query={VIEWTEAMS_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading) {\n              return <h4> Loading </h4>;\n            }\n            if (error) {\n              console.log(error);\n            }\n            console.log(\"DATA\", data);\n\n            return (\n              <div style={{ marginTop: \"30px\" }}>\n                {Object.values(data.allTeams.edges).map((team, index) =>\n                  this.renderTeam(team)\n                )}\n              </div>\n            );\n          }}\n        </Query>\n      </div>\n    );\n  }\n}\nexport default withApollo(JoinRequest);\n","import React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\n\nconst SEND_EMAIL = gql`\n  mutation createEmail($email: String!, $idteam: Int!, $idcourse: String!) {\n    createEmail(\n      input: { email: $email, idteam: $idteam, idcourse: $idcourse }\n    ) {\n      course {\n        id\n        email\n        idteam\n        idcourse\n      }\n    }\n  }\n`;\nconst ADD_MEMBER = gql`\n  mutation createMember($idteam: Int!, $iduser: Int!) {\n    createMember(input: { idteam: $idteam, iduser: $iduser }) {\n      member {\n        id\n        idteam\n        iduser\n      }\n    }\n  }\n`;\n\nclass AcceptStudent extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\"\n    };\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"w-50 mx-auto\"\n        style={{\n          justifyContent: \"space-between\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          display: \"flex\"\n        }}\n      >\n        <input\n          type=\"String\"\n          className=\"form-control form-control-lg\"\n          placeholder=\"email\"\n          name=\"email\"\n          onChange={this.onChange}\n        />\n\n        <button\n          style={{ width: \"100%\", height: \"100%\" }}\n          type=\"button\"\n          className=\"btn btn-secondary btn-lg btn-block\"\n          onClick={this.send}\n        >\n          Send email\n        </button>\n      </div>\n    );\n  }\n}\nexport default AcceptStudent;\n","import { createStore, applyMiddleware, compose } from \"redux\";\n\n// Logger with default options\nimport logger from \"redux-logger\";\n\nimport reducer from \"./reducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nexport default function configureStore(initialState) {\n  const store = createStore(\n    reducer,\n    initialState,\n    compose(applyMiddleware(logger), composeWithDevTools())\n  );\n  return store;\n}\n","import React from \"react\";\nimport Navbar from \"./AppComponents/Navbar\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport SignUp from \"./AppComponents/SignUp\";\nimport Login from \"./AppComponents/Login\";\nimport Landing from \"./AppComponents/Landing\";\nimport StudentChoicesMenu from \"./AppComponents/StudentChoicesMenu\";\nimport ProfChoicesMenu from \"./AppComponents/ProfChoicesMenu\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport configureStore from \"./redux/store\";\nimport CreateTeam from \"./AppComponents/CreateTeam\";\nimport ViewTeams from \"./AppComponents/ViewTeams\";\nimport NewCourse from \"./AppComponents/NewCourse\";\nimport JoinRequest from \"./AppComponents/JoinRequest\";\nimport AcceptStudent from \"./AppComponents/AcceptStudent\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:5000/graphql\"\n});\n\nconst reduxStore = configureStore(window.REDUX_INITIAL_DATA);\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <ReduxProvider store={reduxStore}>\n        <Router>\n          <div>\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/signup\" component={SignUp} />\n            <Route exact path=\"/navbar\" component={Navbar} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/CreateTeam\" component={CreateTeam} />\n            <Route exact path=\"/ViewTeams\" component={ViewTeams} />\n            <Route\n              exact\n              path=\"/studentChoicesMenu\"\n              component={StudentChoicesMenu}\n            />\n            <Route exact path=\"/profChoicesMenu\" component={ProfChoicesMenu} />\n            <Route exact path=\"/SetupCourse\" component={NewCourse} />\n            <Route exact path=\"/JoinRequest\" component={JoinRequest} />\n            <Route exact path=\"/AcceptStudent\" component={AcceptStudent} />\n          </div>\n        </Router>\n      </ReduxProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background.74b19564.png\";"],"sourceRoot":""}